---
title: "Final Project"
format: html
editor: visual
---

#### Data Preparation

#### 1) Population Dataset

```{r}
#2020-2023 population by state
pop_2020_2023 <- read.csv("2020-2023 US POP by State.csv")
#2024 population by state
pop_2024 <- read.csv("2024 US POP by State.csv")

View(pop_2020_2023)
View(pop_2024)

##Arrange each population dataset
pop_2020_2023 <- pop_2020_2023|>
  rename(state = NAME,
         '2020' = POPESTIMATE2020,
         '2021' = POPESTIMATE2021,
         '2022' = POPESTIMATE2022,
         '2023' = POPESTIMATE2023)|>
  select(state, '2020', '2021', '2022', '2023')
  
pop_2024 <- pop_2024|>
  rename(state = US.State,
         '2024' = Population.2024)|>
  select(state, '2024')
   
##Check the state differences
setdiff(pop_2020_2023$state, pop_2024$state)

##Combine the two population datasets:

##pop_2020_2023 and pop_2024 have some differences on the state data. 

##Method 1: pop_combined_common includes only common states
pop_combined_common <- inner_join(pop_2020_2023, pop_2024, by = "state") 
pop_combined_common <- pop_combined_common|>
  mutate(state = state.abb[match(state, state.name)])

##Method 2: pop_combined_all includes all states 
pop_combined_all <- full_join(pop_2020_2023, pop_2024, by = "state")
pop_combined_all <- pop_combined_all|>
  mutate(state = state.abb[match(state, state.name)])|>
  mutate(state = case_when(
    state == "District of Columbia" ~ "DC",
    state == "Puerto Rico" ~ "PR",
    .default = state))|>
  filter(!is.na(state)) 
  #exclude state with NA value because they don't have matching abbreviation

```

#### 2) COVID19 Cases and Deaths Dataset

```{r}
#COVID19 cases
#online source
covid_death <- read_csv("COVID19 death.csv")

#from pset4
api <- "https://data.cdc.gov/resource/pwn4-m3yp.json"
cases_raw <- request(api) |>
  req_url_query("$limit" = 10000000) |>
  req_perform() |>
  resp_body_json(simplifyVector = TRUE)

cases <- cases_raw|>
  mutate(cases = parse_number(new_cases),
         date = as_date(ymd_hms(end_date)))|>
  filter(state %in% pop_combined_common$state)|> #can switch to pop_combined_all
  select(state, date, cases)|>
  arrange(state, date)

```

#### 3) COVID19 Cases, Deaths, and Population by State from 2020 to 2024

```{r}
#Pivot long population 2020-2024
pop_combined_common <- pop_combined_common|>
  pivot_longer(cols = '2020':'2024', 
               names_to = "year",
               values_to = "population")|>
  mutate(year = as.integer(year))

#Combine COVID19 cases + population 2020-2024
cases_population <- cases|>
  mutate(year = year(date))|>
  group_by(state, year)|>
  summarise(cases_total = sum(cases))|>
  left_join(pop_combined_common, by=c("state", "year")) #need to add in 2024 cases

#Total COVID19 deaths by state each year from 2020 to 2024
covid_death <- read_csv("COVID19 death.csv")

covid_death <- covid_death|>
  rename(start_date = `Start Date`,
         end_date = `End Date`,
         covid_deaths = `COVID-19 Deaths`,
         mmwr_week = `MMWR Week`,
         state = State,
         total_death = `Total Deaths`)|>
  mutate(start_date = mdy(start_date),
         end_date = mdy(end_date))|>
  mutate(year = year(start_date))|>
  filter(year>2019)|>
  mutate(state = state.abb[match(state, state.name)],
         state = case_when(
           state == "District of Columbia" ~ "DC",
           state == "Puerto Rico" ~ "PR",
           .default = state))|>
  filter(state %in% pop_combined_common$state)

#COVID19 deaths by state with only year, state, and total deaths
covid_death_total_state <- covid_death|>
  group_by(year, state)|>
  summarise(total_death = sum(covid_deaths, na.rm = TRUE))

##Total COVID19 deaths from 2020 to 2024
covid_death_total<- covid_death_total_state|>
  group_by(year)|>
  summarise(total_death = sum(total_death, na.rm = TRUE))

#Combine covid_death_total_state and population
covid_death_total_state_pop <- covid_death_total_state|>
  left_join(cases_population, by=c("state", "year"))
```

#### 1. Divide the pandemic period into waves

Divide the pandemic period, January 2020 to December 2024 into waves. Justify your choice with data visualization.

```{r}
covid_death_total_state_pop <- covid_death_total_state|>
  left_join(pop_combined_common, by=c("year", "state"))|>
  mutate(death_rate_per_100k =(total_death/population)*1e5)|>
  filter(!is.na(death_rate_per_100k))
    
#by state
ggplot(covid_death_total_state_pop, 
       aes(x = year, y = death_rate_per_100k, color = state)) +
  geom_line() +
  geom_point() +
  labs(
    title = "COVID-19 Death Rate per 100,000 People Over Time by State",
    x = "Year",
    y = "Death Rate (per 100,000)",
    color = "State"
  )

#total
covid_death_total_state_pop|>
  group_by(year)|>
  summarise(death_rate_per_100k = (sum(total_death)/sum(population))*1e5)|>
  ggplot(aes(x=year, y=death_rate_per_100k))+
  geom_line()+
  geom_point()+
  labs(
    title = "Total COVID-19 Death Rate per 100,000 People Over Time in the US",
    x = "Year",
    y = "Death Rate (per 100,000)",
  )
```

#### Observation:

-   First wave: 2020

-   Second wave: Late 2020 to early 2021

#### 2. COVID 19 Death Rates by State

For each period, compute the death rates by state. Describe which states did better or worse during the different periods.

```{r}
covid_death_state_2020_2021 <- covid_death_total_state_pop|>
  filter(year>=2020 & year <=2021)|>
  arrange(desc(death_rate_per_100k))
  

covid_death_state_2020 <- covid_death_state_2020_2021|>
  filter(year==2020)|>
  arrange(desc(death_rate_per_100k))

covid_death_state_2021 <- covid_death_state_2020_2021|>
  filter(year==2021)|>
  arrange(desc(death_rate_per_100k))

covid_death_state_2020_2021
covid_death_state_2020
covid_death_state_2021

#2020-2021
ggplot(covid_death_state_2020_2021, 
       aes(x = reorder(state, death_rate_per_100k), y = death_rate_per_100k)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  labs(
    title = "COVID-19 Death Rates by State (2020-2021)",
    x = "State",
    y = "Death Rate per 100,000"
  )+
  theme_economist()+
  theme(axis.text.x = element_text(angle = 90, hjust = 1))

#2020
ggplot(covid_death_state_2020, 
       aes(x = reorder(state, death_rate_per_100k), y = death_rate_per_100k)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  labs(
    title = "COVID-19 Death Rates by State (2020)",
    x = "State",
    y = "Death Rate per 100,000"
  )+
  theme_economist()+
  theme(axis.text.x = element_text(angle = 90, hjust = 1))

#2021
ggplot(covid_death_state_2021, 
       aes(x = reorder(state, death_rate_per_100k), y = death_rate_per_100k)) +
  geom_bar(stat = "identity", fill = "skyblue") +
  labs(
    title = "COVID-19 Death Rates by State (2021)",
    x = "State",
    y = "Death Rate per 100,000"
  )+
  theme_economist()+
  theme(axis.text.x = element_text(angle = 90, hjust = 1))
```

#### 3. COVID 19 Trend

Describe if COVID-19 became less or more virulent across the different periods.

-    **Case Fatality Rate (CFR): (Total Deaths/ Total Cases)\*100**

```{r}
covid_death_pop_case_state <- covid_death_total_state|>
  left_join(cases_population, by=c("state", "year"))|>
  mutate(total_death = as.numeric(total_death),
         population = as.numeric(population),
         death_rate_per_100k = (total_death / population)*100000,
         )|>
  filter(!is.na(death_rate_per_100k))
```

-   **COVID-19 Case Fatality Rate by State (2020-2023)**

```{r}
covid_case_rate_state <- covid_death_pop_case_state|>
  mutate(case_fatality_rate=(total_death/cases_total)*100)|>
  ggplot(aes(x = year, y = case_fatality_rate, color = state)) +
  geom_line() +
  geom_point() +
  labs(
    title = "COVID-19 Case Fatality Rate by State (2020-2023)",
    x = "Year",
    y = "Case Fatality Rate (%)"
  ) +
  theme_economist() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),  
    plot.margin = margin(1, 1, 1, 1, "cm"),  
    legend.position = "right",  
    legend.title = element_blank(), 
    legend.text = element_text(size = 5),
    plot.title = element_text(size=10)
  )

covid_case_rate_state
```

-   **COVID-19 Case Fatality Rate Overall (2020-2023)**

```{r}
covid_case_rate_overall <- covid_death_pop_case_state|>
  group_by(year)|>
  summarise(case_fatality_rate=(sum(total_death)/sum(cases_total))*100)|>
  ggplot(aes(x=year, y=case_fatality_rate))+
  geom_point()+
  geom_line()+
  labs(title="COVID-19 Case Fatality Rate in the US (2020-2023)",
       x="Year",
       x="Case Fatality Rate (%)")+
  theme_economist()

covid_case_rate_overall
```

#### 4. Weekly Excess Mortality by State

Estimate excess mortality for each week for each state. Do COVID-19 deaths explain the excess mortality?

```{r}
covid_death_excess <- covid_death|>
  group_by(state, mmwr_week)|>
  summarise(expected_deaths = mean(total_death, na.rm = TRUE),
            expected_covid_deaths = mean(covid_deaths, na.rm = TRUE),
            .groups = 'drop')|>
  mutate(excess_mortality = expected_deaths-expected_covid_deaths)

covid_death_excess
```

#### 5. Excess Mortality by State

Repeat 2 but for excess mortality instead of COVID-19 deaths.

```{r}

```
