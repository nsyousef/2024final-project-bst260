---
title: "Final Project"
format: html
editor: source
---

```{r}
#required packages
# install.packages("httr2")
# install.packages("jsonlite")
# install.packages("ggthemes")
# install.packages("plotly")

#load required library
library(dslabs)
library(lubridate)
library(ggplot2)
library(tidyr)
library(dplyr)
library(jsonlite)
library(httr2)
library(readr)
library(ggthemes)
library(plotly)
```

#### Data Preparation

#### 1) Population Dataset

```{r}
#2020-2023 population by state
pop_2020_2023 <- read.csv("../data/2020-2023_US_POP_by_State.csv")
#2024 population by state
pop_2024 <- read.csv("../data/2024_US_POP_by_State.csv")

##Arrange each population dataset
pop_2020_2023 <- pop_2020_2023|>
  rename(state = NAME,
         '2020' = POPESTIMATE2020,
         '2021' = POPESTIMATE2021,
         '2022' = POPESTIMATE2022,
         '2023' = POPESTIMATE2023)|>
  select(state, '2020', '2021', '2022', '2023')
  
pop_2024 <- pop_2024|>
  rename(state = US.State,
         '2024' = Population.2024)|>
  select(state, '2024')

##Check the state differences
setdiff(pop_2020_2023$state, pop_2024$state)

##Combine the two population datasets:

##pop_2020_2023 and pop_2024 have some differences on the state data. 

##Method 1: pop_combined_common includes only common states
pop_combined_common <- inner_join(pop_2020_2023, pop_2024, by = "state") 
pop_combined_common <- pop_combined_common|>
  mutate(state = state.abb[match(state, state.name)])

##Method 2: pop_combined_all includes all states 
pop_combined_all <- full_join(pop_2020_2023, pop_2024, by = "state")
pop_combined_all <- pop_combined_all|>
  mutate(state = state.abb[match(state, state.name)])|>
  mutate(state = case_when(
    state == "District of Columbia" ~ "DC",
    state == "Puerto Rico" ~ "PR",
    .default = state))|>
  filter(!is.na(state)) 

pop_combined_common <- pop_combined_common|>
  pivot_longer(cols = '2020':'2024', 
               names_to = "year",
               values_to = "population")|>
  mutate(year = as.integer(year),
         population = as.numeric(population))
```

#### 2) COVID19 Cases Dataset

```{r}
#COVID19 cases from pset4

api <- "https://data.cdc.gov/resource/pwn4-m3yp.json"
cases_raw <- request(api) |>
  req_url_query("$limit" = 10000000) |>
  req_perform() |>
  resp_body_json(simplifyVector = TRUE)

cases <- cases_raw|>
  mutate(cases = parse_number(new_cases),
         date = as_date(ymd_hms(end_date)),
         year = year(date))|>
  filter(state %in% pop_combined_common$state)|> #can switch to pop_combined_all
  select(state, date, cases, year)|>
  arrange(state, date)

cases_year_state <- cases|>
  group_by(state, year)|>
  summarise(cases_total = sum(cases, na.rm = TRUE),
            .groups = 'drop')

cases_year_overall <- cases|>
  group_by(year)|>
  summarise(cases_total = sum(cases, na.rm = TRUE),
            .groups = 'drop')
```

#### 3) Combine Population and COVID-19 Cases

-   Population (2020-2024)

-   COVID-19 Cases (2020-2023)

```{r}
#by state
cases_population_state <- pop_combined_common|>
  left_join(cases_year_state, by=c("state", "year"))

#by overall
cases_population_overall <- pop_combined_common|>
  group_by(year)|>
  summarise(population = sum(population, na.rm = TRUE))|>
  left_join(cases_year_overall, by="year")
```

#### 4) COVID-10 Death and Overall Death Dataset

```{r}
#Total COVID19 deaths by state each year from 2020 to 2024
covid_death <- read.csv("../data/COVID19_death.csv")

#Data wrangling
covid_death_clean <- covid_death|>
  rename(start_date = `Start.Date`,
         end_date = `End.Date`,
         covid_death = `COVID.19.Deaths`,
         mmwr_week = `MMWR.Week`,
         state = State,
         total_death = `Total.Deaths`,
         percentage_expected_death = Percent.of.Expected.Deaths)|>
  mutate(start_date = mdy(start_date),
         end_date = mdy(end_date),
         covid_death = as.numeric(covid_death),
         total_death = as.numeric(total_death))|>
  mutate(year = year(start_date))|>
  filter(year>2019)|>
  mutate(state = state.abb[match(state, state.name)],
         state = case_when(
           state == "District of Columbia" ~ "DC",
           state == "Puerto Rico" ~ "PR",
           .default = state))|>
  filter(state %in% pop_combined_common$state)|>
  select(start_date, end_date, mmwr_week, state, covid_death, total_death, year)

```

```{r}
#by State
covid_state <- covid_death_clean|>
  group_by(state, year)|>
  summarise(covid_death = sum(covid_death, na.rm = TRUE),
            total_death = sum(total_death, na.rm = TRUE),
            .groups = 'drop')|>
  left_join(cases_population_state, by=c("state", "year"))|>
  mutate(covid_death_rate_100k = (covid_death/population)*1e5,
         overall_death_rate_100k = (total_death/population),
         case_fatality_rate = (covid_death/cases_total)*100)|>
  mutate(across(c("covid_death", "total_death", "cases_total", "population", 
                  "covid_death_rate_100k", "overall_death_rate_100k"), as.numeric))

#by Overall
covid_overall <- covid_death_clean|>
  group_by(year)|>
  summarise(covid_death = sum(covid_death, na.rm = TRUE),
            total_death = sum(total_death, na.rm = TRUE),
            .groups = 'drop')|>
  left_join(cases_population_overall, by=c("year"))|>
  mutate(covid_death_rate_100k = (covid_death/population)*1e5,
         overall_death_rate_100k = (total_death/population)*1e5,
         case_fatality_rate = (covid_death/cases_total)*100)|>
  mutate(across(c("covid_death", "total_death", "cases_total", "population",
                  "covid_death_rate_100k", "overall_death_rate_100k", "case_fatality_rate")))
```

#### 1. Divide the pandemic period into waves

Divide the pandemic period, January 2020 to December 2024 into waves. Justify your choice with data visualization.

#### COVID-19 Death Rate per 100,000 People Over Time (2020-2024)

##### Plot 1: COVID-19 Death Rate per 100,000 People by State (2020-2024)

```{r}
p1 <- covid_state|>
  ggplot(aes(x=year, y=covid_death_rate_100k, color=state))+
           geom_line()+
           geom_point()+
           labs(title = "COVID-19 Death Rate per 100,000 People by State (2020-2024)",
                x = "Year",
                y = "Death Rate (per 100,000)")

ggplotly(p1)
```

##### Plot 2: COVID-19 Death Rate per 100,000 People in the US (2020-2024)

```{r}
p2 <- covid_overall|>
  ggplot(aes(x=year, y=covid_death_rate_100k))+
  geom_line(color = "red")+
  geom_point(color="blue")+
  labs(
    title = "COVID-19 Death Rate per 100,000 People in the US (2020-2024)",
    x = "Year",
    y = "Death Rate (per 100,000)")

ggplotly(p2)
```

#### Observation:

-   First wave: 2020

-   Second wave: Late 2020 to early 2021

#### COVID-19 Cases Over Time (2020-2023)

##### Plot 3: COVID-19 Cases by State (2020-2023)

```{r}
p3 <- covid_state|>
  filter(year != "2024")|>
  ggplot(aes(x=year, y=cases_total, color=state))+
  geom_point()+
  geom_line()+
  labs(title = "COVID-19 Cases by State (2020-2023)",
       x="Year",
       y="Cases")

ggplotly(p3)
```

##### Plot 4: COVID-19 Cases in the US (2020-2023)

```{r}
p4 <- covid_overall|>
  filter(year != "2024")|>
  ggplot(aes(x=year, y=cases_total))+
  geom_point(color="red")+
  geom_line(color="blue")+
  labs(title = "COVID-19 Cases in the US (2020-2023)",
       x="Year",
       y="Cases")

ggplotly(p4)
```

#### Observation:

-   Highest peak: 2022 (wave 2021-2022)

-   Second peak: 2021 (wave 2020-2021)

##### Plot 5: COVID-19 Case Rate vs COVID-19 Death Rate (2020-2023)

```{r}
#Compare COVID-19 cases and deaths on the same plot

p5 <- covid_overall|>
  filter(year != "2024")|>
  mutate(covid_case_rate_100k =(cases_total/population)*1e5)|>
  ggplot(aes(x=year))+
  geom_line(aes(y=covid_case_rate_100k, color="Case Rate"))+
  geom_line(aes(y=covid_death_rate_100k, color="Death Rate"))+
  labs(title = "COVID-19 Case Rate vs COVID-19 Death Rate (2020-2023)",
       x="Year",
       y="Rate per 100,000",
       color= "Metric")+
  scale_color_manual(values = c("Case Rate" = "navy",
                                "Death Rate" = "red"),
                     name="")

ggplotly(p5)
```

#### 2. COVID 19 Death Rates by State

For each period, compute the death rates by state. Describe which states did better or worse during the different periods.

##### Plot 6: COVID-19 Death Rates by State (2021-2022)

```{r}
p6 <- covid_state|>
  filter(year>=2021 & year<=2022)|>
  ggplot(aes(x =covid_death_rate_100k, y = reorder(state, covid_death_rate_100k)))+
  geom_bar(stat = "identity", fill = "skyblue") +
  labs(title = "COVID-19 Death Rates by State (2021-2022)",
       x = "Death Rate per 100,000",
       y = "State")

ggplotly(p6)
```

##### Plot 7: COVID-19 Death Rates by State (2021)

```{r}
p7 <- covid_state|>
  filter(year=="2021")|>
  ggplot(aes(x =covid_death_rate_100k, y = reorder(state, covid_death_rate_100k)))+
  geom_bar(stat = "identity", fill = "skyblue") +
  labs(title = "COVID-19 Death Rates by State (2021)",
       x = "Death Rate per 100,000",
       y = "State")

ggplotly(p7)
```

##### Plot 8: COVID-19 Death Rates by State (2022)

```{r}
p8 <- covid_state|>
  filter(year=="2022")|>
  ggplot(aes(x =covid_death_rate_100k, y = reorder(state, covid_death_rate_100k)))+
  geom_bar(stat = "identity", fill = "skyblue") +
  labs(title = "COVID-19 Death Rates by State (2022)",
       x = "Death Rate per 100,000",
       y = "State")

ggplotly(p8)
```

#### 3. COVID 19 Trend

Describe if COVID-19 became less or more virulent across the different periods.

-   **COVID-19 Case Fatality Rate by State and Overall (2020-2023)**

##### Plot 9: COVID-19 Case Fatality Rate by States (2020-2023)

##### Plot 10: COVID-19 Case Fatality Rate in the US (2020-2023)

```{r}
p9 <- covid_state|>
  filter(year!="2024")|>
  ggplot(aes(x=year, y=case_fatality_rate, colour = state))+
  geom_point()+
  geom_line()+
  labs(title="COVID-19 Case Fatality Rate by States (2020-2023)",
       x="Year",
       y="Case Fatality Rate (%)")
  
ggplotly(p9)

p10 <- covid_overall|>
  filter(year!="2024")|>
  ggplot(aes(x=year, y=case_fatality_rate))+
  geom_point(color="blue")+
  geom_line(color="red")+
  labs(title="COVID-19 Case Fatality Rate in the US (2020-2023)",
       x="Year",
       y="Case Fatality Rate (%)")

ggplotly(p10)
```

##### Plot 11: COVID-19 Death Rates by State (2020-2021)

##### Plot 12: COVID-19 Case Fatality Rate by States (2021-2022)

```{r}
p11 <- covid_state|>
  filter(year>="2020" & year<="2021")|>
  ggplot(aes(x=year, y=case_fatality_rate, colour = state))+
  geom_point()+
  geom_line()+
  labs(title="COVID-19 Case Fatality Rate by States (2020-2021)",
       x="Year",
       y="Case Fatality Rate (%)")

p12 <- covid_state|>
  filter(year>="2021" & year<="2022")|>
  ggplot(aes(x=year, y=case_fatality_rate, colour = state))+
  geom_point()+
  geom_line()+
  labs(title="COVID-19 Case Fatality Rate by States (2021-2022)",
       x="Year",
       y="Case Fatality Rate (%)")

ggplotly(p11)
ggplotly(p12)
```

##### Plot 13: COVID-19 Case Fatality Rate in the US (2020-2021)

##### Plot 14: COVID-19 Case Fatality Rate in the US (2021-2022)

```{r}
p13 <- covid_overall|>
  filter(year>="2020" & year<="2021")|>
  ggplot(aes(x=year, y=case_fatality_rate))+
  geom_point(color="blue")+
  geom_line(color="red")+
  labs(title="COVID-19 Case Fatality Rate in the US (2020-2021)",
       x="Year",
       y="Case Fatality Rate (%)")

p14 <- covid_overall|>
  filter(year>="2021" & year<="2022")|>
  ggplot(aes(x=year, y=case_fatality_rate))+
  geom_point(color="blue")+
  geom_line(color="red")+
  labs(title="COVID-19 Case Fatality Rate in the US (2021-2022)",
       x="Year",
       y="Case Fatality Rate (%)")

ggplotly(p13)
ggplotly(p14)
```

#### 4. Weekly Excess Mortality by State

Estimate excess mortality for each week for each state. Do COVID-19 deaths explain the excess mortality?

```{r}

covid_death_excess <- covid_death|>
  group_by(state, mmwr_week)|>
  summarise(expected_deaths = mean(total_death, na.rm = TRUE),
            expected_covid_deaths = mean(covid_deaths, na.rm = TRUE),
            .groups = 'drop')|>
  mutate(excess_mortality = expected_deaths-expected_covid_deaths)

covid_death_excess
```

#### 5. Excess Mortality by State

Repeat 2 but for excess mortality instead of COVID-19 deaths.

```{r}
# Compute average excess mortality
avg_excess <- covid_death_excess |> 
  group_by(state) |> 
  mutate(avg_excess = mean(excess_mortality, na.rm = TRUE)) |> 
  filter(mmwr_week == max(mmwr_week, na.rm = TRUE)) |> 
  ungroup() |> 
  arrange(desc(excess_mortality))
  

#2020-2022 excess mortality
ggplot(avg_excess, 
       aes(x = avg_excess, y = reorder(state, avg_excess))) +
  geom_bar(stat = "identity", fill = "skyblue") +
  labs(
    title = "Average Excess Mortality by State from 2020-2022",
    x = "Average Excess Mortality",
    y = "State"
  ) +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))
```

```{r}
weekly_excess_2022 <- covid_death|>
  filter(Year == 2022)|>
  group_by(state) |> 
  select(mmwr_week, state, covid_deaths, total_death) |> 
  filter(complete.cases(mmwr_week, state, covid_deaths, total_death)) |> 
  mutate(excess_mortality = total_death-covid_deaths) 
  
#2022 excess mortality by week
ggplot(weekly_excess_2022, 
       aes(x = mmwr_week, y = excess_mortality, color = state)) +
  geom_line() +
  labs(
    title = "Excess Mortality by Week in 2022",
    x = "Week",
    y = "Excess Mortality"
  ) +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))
```
