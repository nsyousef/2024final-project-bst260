---
title: "Final Project"
format: html
editor: source
---

```{r}
#required packages
# install.packages("httr2")
# install.packages("jsonlite")
# install.packages("ggthemes")
# install.packages("plotly")

#load required library
library(dslabs)
library(lubridate)
library(ggplot2)
library(tidyr)
library(dplyr)
library(jsonlite)
library(httr2)
library(readr)
library(ggthemes)
library(plotly)
```

#### 1) Data Preparation

#### 1.1 Population Data Set

We compiled U.S. population data from 2020 to 2024 by merging datasets: one from 2020 to 2023 provided in Problem Set 4 and another for 2024 downloaded from an online source. We streamlined the dataset by renaming columns for clarity and abbreviating state names to standard two-letter codes. These adjustments ensured consistency and ease of analysis.

```{r}
#2020-2023 population by state
pop_2020_2023 <- read.csv("../raw-data/2020-2023_US_POP_by_State.csv")
#2024 population by state
pop_2024 <- read.csv("../raw-data/2024_US_POP_by_State.csv")

##Arrange each population dataset
pop_2020_2023 <- pop_2020_2023|>
  rename(state = NAME,
         '2020' = POPESTIMATE2020,
         '2021' = POPESTIMATE2021,
         '2022' = POPESTIMATE2022,
         '2023' = POPESTIMATE2023)|>
  select(state, '2020', '2021', '2022', '2023')
  
pop_2024 <- pop_2024|>
  rename(state = US.State,
         '2024' = Population.2024)|>
  select(state, '2024')

##Combine the two population datasets:

pop_all <- full_join(pop_2020_2023, pop_2024, by="state")
pop_all$"2024" <- ifelse(is.na(pop_all$"2024"),
                         pop_all$"2023",
                         pop_all$"2024")
pop_all <- pop_all|>
  mutate(state = case_when(
    state == "District of Columbia" ~ "DC",
    state == "Puerto Rico" ~ "PR",
    TRUE ~ ifelse(is.na(state.abb[match(state, state.name)]), 
                  NA, state.abb[match(state, state.name)])))|>
  filter(!is.na(state))|>
  pivot_longer(cols = c("2020", "2021", "2022", "2023", "2024"),
               names_to = "year",
               values_to = "population")

```

#### 1.2 COVID19 Cases Data Set

For our analysis of COVID-19 cases, we accessed the dataset directly from the Centers for Disease Control and Prevention (CDC) via their public API. The data retrieval was conducted using a structured request to the API endpoint. This endpoint was queried to download all available records, capped at 10 million entries to ensure comprehensive coverage. It is important to keep in mind that this dataset discontinued after May 2023, so we do not have COVID-19 case data for year 2024.

```{r}
#COVID19 cases from pset4

api <- "https://data.cdc.gov/resource/pwn4-m3yp.json"
cases_raw <- request(api) |>
  req_url_query("$limit" = 10000000) |>
  req_perform() |>
  resp_body_json(simplifyVector = TRUE)


```

Next, we performed data wrangling to ensure usability.

-   Data Parsing: New case numbers were extracted and converted to numeric format.

```{=html}
<!-- -->
```
-   Date Conversion: The `end_date` field was converted to a proper date format for temporal analyses.

-   Year Extraction: The year was extracted from the date for annual trend analysis.

-   Data Filtering for States: The states were filtered to include only the states in pop_all, which comprises 52 states (including all 50 U.S. states, the District of Columbia, and Puerto Rico).

```{r}
cases <- cases_raw|>
  mutate(cases = parse_number(new_cases),
         date = as_date(ymd_hms(end_date)),
         year = year(date))|>
  filter(state %in% pop_all$state)|> 
  select(state, date, cases, year)|>
  arrange(state, date)
```

The processed data was then organized into two distinct dataset to facilitate comparative analyses:

#### 1.2.1 State-Level COVID19 Cases Data Set

```{r}
#states
cases_year_state <- cases|>
  group_by(state, year)|>
  summarise(cases_total = sum(cases, na.rm = TRUE),
            .groups = 'drop')|>
  mutate(year = as.character(year))

```

#### 1.2.2 National-Level COVID19 Cases Data Set

```{r}
#US
cases_year_overall <- cases|>
  group_by(year)|>
  summarise(cases_total = sum(cases, na.rm = TRUE),
            .groups = 'drop')|>
  mutate(year = as.character(year))
```

#### 1.3 Combine Population and COVID-19 Cases Date Sets

To facilitate a comprehensive analysis of the impact of COVID-19 relative to population metrics, we merged the population data (2020-2024) with the aggregated COVID-19 cases data (2020-2023). This merging process was performed separately for state-level and national-level data to enable detailed comparative analyses.

#### 1.3.1 State-Level Data Combination

We combined the state-specific population data with the corresponding state and year-aggregated COVID-19 cases using a left join operation. This ensured that all population data entries were retained, including those without corresponding case data. The `year` column was converted from character to numeric format to standardize the data types across all fields, resulting in the `cases_population_state` dataset.

```{r}
#states
cases_population_state <- pop_all|>
  left_join(cases_year_state, by=c("state", "year"))|>
  mutate(year = as.numeric(year))
```

#### 1.3.2 National-Level Data Combination

For a the US dataset, we first aggregated the population data by year to match the temporal granularity of the COVID-19 data. Summation was used to compute the total population per year, accounting for any missing values with `na.rm = TRUE`. We then merged this aggregated population data with the national COVID-19 cases data. A similar left join operation was employed, ensuring alignment on the `year` field. The final `cases_population_overall` dataset also had the `year` field converted from character to numeric to maintain consistency.

```{r}
#US
cases_population_overall <- pop_all|>
  group_by(year)|>
  summarise(population = sum(population, na.rm = TRUE))|>
  left_join(cases_year_overall, by="year")|>
  mutate(year = as.numeric(year))
```

#### 1.4 COVID-10 Death and Overall Death Data Set

We processed a dataset detailing annual state-specific deaths due to COVID-19 and total deaths from 2020 to 2024. This dataset was obtained from the Centers for Disease Control and Prevention (CDC).

```{r}
#Total COVID19 deaths by state each year from 2020 to 2024
covid_death <- read.csv("../raw-data/COVID19_death.csv")

#Data wrangling
covid_death_clean <- covid_death|>
  rename(start_date = `Start.Date`,
         end_date = `End.Date`,
         covid_death = `COVID.19.Deaths`,
         mmwr_week = `MMWR.Week`,
         state = State,
         total_death = `Total.Deaths`,
         percentage_expected_death = Percent.of.Expected.Deaths)|>
  mutate(start_date = mdy(start_date),
         end_date = mdy(end_date),
         covid_death = as.numeric(covid_death),
         total_death = as.numeric(total_death))|>
  mutate(year = year(start_date))|>
  filter(year>2019)|>
  mutate(state = case_when(
    state == "District of Columbia" ~ "DC",
    state == "Puerto Rico" ~ "PR",
    TRUE ~ state.abb[match(state, state.name)]))|>
  filter(state %in% pop_all$state)|>
  select(start_date, end_date, mmwr_week, state, covid_death, total_death, year)
```

#### 1.5 Complete Dataset: 

-   **Population for each states in the US (2020-2024)**

-   **COVID-19 Cases (2020-2023)**

-   **COVID-19 Deaths (2020-2024)**

To assess the impact of COVID-19 mortality both at the state and national levels, we further refined our analyses by integrating the COVID-19 death data with the previously combined datasets, which include COVID-19 case data from 2020 to 2023 and population figures for all states from 2020 to 2024. This comprehensive dataset allows for a detailed evaluation of mortality in relation to case numbers and population density. We calculated key metrics to measure the pandemic's impact:

-   **COVID-19 Death Rate**: The number of COVID-19 deaths per 10,000 people

-   **Total Death Rate**: The overall number of deaths per 10,000 people

#### 1.5.1 State-Level Complete Dataset

```{r}
#states
covid_state <- covid_death_clean|>
  group_by(state, year)|>
  summarise(covid_death = sum(covid_death, na.rm = TRUE),
            total_death = sum(total_death, na.rm = TRUE),
            .groups = 'drop')|>
  left_join(cases_population_state, by=c("state", "year"))|>
  mutate(covid_death_rate_100k = (covid_death/population)*1e5,
         total_death_rate_100k = (total_death/population),
         case_fatality_rate = (covid_death/cases_total)*100)|>
  mutate(across(c("covid_death", "total_death", "cases_total", "population", 
                  "covid_death_rate_100k", "total_death_rate_100k"), as.numeric))
```

#### 1.5.2 National-Level Complete Dataset

```{r}
#US
covid_overall <- covid_death_clean|>
  group_by(year)|>
  summarise(covid_death = sum(covid_death, na.rm = TRUE),
            total_death = sum(total_death, na.rm = TRUE),
            .groups = 'drop')|>
  left_join(cases_population_overall, by=c("year"))|>
  mutate(covid_death_rate_100k = (covid_death/population)*1e5,
         total_death_rate_100k = (total_death/population)*1e5,
         case_fatality_rate = (covid_death/cases_total)*100)|>
  mutate(across(c("covid_death", "total_death", "cases_total", "population",
                  "covid_death_rate_100k", "total_death_rate_100k", "case_fatality_rate")))
```

#### 2) Divide the pandemic period into waves

Divide the pandemic period, January 2020 to December 2024 into waves. Justify your choice with data visualization.

#### COVID-19 Death Rate per 100,000 People Over Time (2020-2024)

##### Plot 1: COVID-19 Death Rate per 100,000 People by State (2020-2024)

```{r}
p1 <- covid_state|>
  ggplot(aes(x=year, y=covid_death_rate_100k, color=state))+
           geom_line()+
           geom_point()+
           labs(title = "COVID-19 Death Rate per 100,000 People by State (2020-2024)",
                x = "Year",
                y = "Death Rate (per 100,000)")

ggplotly(p1)
```

##### Plot 2: COVID-19 Death Rate per 100,000 People in the US (2020-2024)

```{r}
p2 <- covid_overall|>
  ggplot(aes(x=year, y=covid_death_rate_100k))+
  geom_line(color = "red")+
  geom_point(color="blue")+
  labs(
    title = "COVID-19 Death Rate per 100,000 People in the US (2020-2024)",
    x = "Year",
    y = "Death Rate (per 100,000)")

ggplotly(p2)
```

#### Observation:

-   First wave: 2020

-   Second wave: Late 2020 to early 2021

#### COVID-19 Cases Over Time (2020-2023)

##### Plot 3: COVID-19 Cases by State (2020-2023)

```{r}
p3 <- covid_state|>
  filter(year!="2024")|>
  mutate(year=as.numeric(year))|>
  ggplot(aes(x=year, y=cases_total, color=state))+
  geom_point()+
  geom_line()+
  labs(title = "COVID-19 Cases by State (2020-2023)",
       x="Year",
       y="Cases")

ggplotly(p3)
```

##### Plot 4: COVID-19 Cases in the US (2020-2023)

```{r}
p4 <- covid_overall|>
  filter(year != "2024")|>
  ggplot(aes(x=year, y=cases_total))+
  geom_point(color="red")+
  geom_line(color="blue")+
  labs(title = "COVID-19 Cases in the US (2020-2023)",
       x="Year",
       y="Cases")

ggplotly(p4)
```

#### Observation:

-   Highest peak: 2022 (wave 2021-2022)

-   Second peak: 2021 (wave 2020-2021)

##### Plot 5: COVID-19 Case Rate vs COVID-19 Death Rate (2020-2023)

```{r}
#Compare COVID-19 cases and deaths on the same plot

p5 <- covid_overall|>
  filter(year != "2024")|> # case data is not availbe in 2024
  mutate(covid_case_rate_100k =(cases_total/population)*1e5)|>
  ggplot(aes(x=year))+
  geom_line(aes(y=covid_case_rate_100k, color="Case Rate"))+
  geom_line(aes(y=covid_death_rate_100k, color="Death Rate"))+
  labs(title = "COVID-19 Case Rate vs COVID-19 Death Rate (2020-2023)",
       x="Year",
       y="Rate per 100,000",
       color= "Metric")+
  scale_color_manual(values = c("Case Rate" = "navy",
                                "Death Rate" = "red"),
                     name="")

ggplotly(p5)
```

#### 3) COVID 19 Death Rates by State

For each period, compute the death rates by state. Describe which states did better or worse during the different periods.

##### Plot 6: COVID-19 Death Rates by State (2021-2022)

```{r}
p6 <- covid_state|>
  filter(year>=2021 & year<=2022)|>
  ggplot(aes(x =covid_death_rate_100k, y = reorder(state, covid_death_rate_100k)))+
  geom_bar(stat = "identity", fill = "skyblue") +
  labs(title = "COVID-19 Death Rates by State (2021-2022)",
       x = "Death Rate per 100,000",
       y = "State")

ggplotly(p6)
```

-   Observations for Death Rate per 100,000 (2021-2022):

    -   Highest: West Virginia (WV)

    -   Lowest: Vermont (VT)

##### Plot 7: COVID-19 Death Rates by State (2021)

```{r}
p7 <- covid_state|>
  filter(year=="2021")|>
  ggplot(aes(x =covid_death_rate_100k, y = reorder(state, covid_death_rate_100k)))+
  geom_bar(stat = "identity", fill = "skyblue") +
  labs(title = "COVID-19 Death Rates by State (2021)",
       x = "Death Rate per 100,000",
       y = "State")

ggplotly(p7)
```

-   Observations for Death Rate per 100,000 (2021):

    -   Highest: West Virginia (WV)

    -   Lowest: Vermont (VT)

##### Plot 8: COVID-19 Death Rates by State (2022)

```{r}
p8 <- covid_state|>
  filter(year=="2022")|>
  ggplot(aes(x =covid_death_rate_100k, y = reorder(state, covid_death_rate_100k)))+
  geom_bar(stat = "identity", fill = "skyblue") +
  labs(title = "COVID-19 Death Rates by State (2022)",
       x = "Death Rate per 100,000",
       y = "State")

ggplotly(p8)
```

-   Observations for Death Rate per 100,000 (2022):

    -   Highest: West Virginia (WV)

    -   Lowest: Alaska (AK)

#### 4) COVID 19 Trend

Describe if COVID-19 became less or more virulent across the different periods.

**COVID-19 Case Fatality Rate by State and Overall (2020-2023)**

##### Plot 9: COVID-19 Case Fatality Rate by States (2020-2023)

##### Plot 10: COVID-19 Case Fatality Rate in the US (2020-2023)

```{r}
p9 <- covid_state|>
  filter(year!="2024")|> # case data is not availbe in 2024
  ggplot(aes(x=year, y=case_fatality_rate, colour = state))+
  geom_point()+
  geom_line()+
  labs(title="COVID-19 Case Fatality Rate by States (2020-2023)",
       x="Year",
       y="Case Fatality Rate (%)")
  
ggplotly(p9)

p10 <- covid_overall|>
  filter(year!="2024")|> # case data is not availbe in 2024
  ggplot(aes(x=year, y=case_fatality_rate))+
  geom_point(color="blue")+
  geom_line(color="red")+
  labs(title="COVID-19 Case Fatality Rate in the US (2020-2023)",
       x="Year",
       y="Case Fatality Rate (%)")

ggplotly(p10)
```

-   Observations for COVID-19 Case Fatality Rate in the US (2020-2023):

    -   CFR experienced a sharp decline from 2020 to 2021 and continued to decrease at a slower pace from 2021 to 2022.

    -   However, there was an increase in the CFR from 2022 to 2023.

##### Plot 11: COVID-19 Death Rates by State (2020-2021)

##### Plot 12: COVID-19 Case Fatality Rate by States (2021-2022)

```{r}
p11 <- covid_state|>
  filter(year>="2020" & year<="2021")|>
  ggplot(aes(x=year, y=case_fatality_rate, colour = state))+
  geom_point()+
  geom_line()+
  labs(title="COVID-19 Case Fatality Rate by States (2020-2021)",
       x="Year",
       y="Case Fatality Rate (%)")

p12 <- covid_state|>
  filter(year>="2021" & year<="2022")|>
  ggplot(aes(x=year, y=case_fatality_rate, colour = state))+
  geom_point()+
  geom_line()+
  labs(title="COVID-19 Case Fatality Rate by States (2021-2022)",
       x="Year",
       y="Case Fatality Rate (%)")

ggplotly(p11)
ggplotly(p12)
```

-   Observations for COVID-19 Case Fatality Rate by States (2020-2022):

    -   Vermont exhibited the highest CFR in early 2020. However, from 2021 to 2022, there was a dramatic decrease in its CFR, ultimately making it the state with the lowest CFR.

-   Observations for COVID-19 Case Fatality Rate by States (2021-2022):

    -   Nevada exihbited the highest CFR in early 2021 while Vermont exhibited the lowest.

##### Plot 13: COVID-19 Case Fatality Rate in the US (2020-2021)

##### Plot 14: COVID-19 Case Fatality Rate in the US (2021-2022)

```{r}
p13 <- covid_overall|>
  filter(year>="2020" & year<="2021")|>
  ggplot(aes(x=year, y=case_fatality_rate))+
  geom_point(color="blue")+
  geom_line(color="red")+
  scale_x_continuous(breaks = 2020:2021, 
                     labels = as.character(2020:2021))+
  labs(title="COVID-19 Case Fatality Rate in the US (2020-2021)",
       x="Year",
       y="Case Fatality Rate (%)")

p14 <- covid_overall|>
  filter(year>="2021" & year<="2022")|>
  ggplot(aes(x=year, y=case_fatality_rate))+
  geom_point(color="blue")+
  geom_line(color="red")+
  scale_x_continuous(breaks = 2021:2022, 
                     labels = as.character(2021:2022))+
  labs(title="COVID-19 Case Fatality Rate in the US (2021-2022)",
       x="Year",
       y="Case Fatality Rate (%)")

ggplotly(p13)
ggplotly(p14)
```

-   Observations for COVID-19 Case Fatality Rate in the US (2020-2021) and (2021-2022):

    -   For both periods, CFR exhibited a decline.

#### 5) Weekly Excess Mortality by State

Estimate excess mortality for each week for each state. Do COVID-19 deaths explain the excess mortality?

```{r}
week_2024 <- covid_death_clean|>
  filter(year == 2024)|>
  select(mmwr_week)|>
  na.omit()

dat <- covid_death_clean|>
  left_join(cases_population_state, by = c("state", "year"))|>
  rename(week = "mmwr_week")|>
  mutate(mortality = total_death/population*1e5,
         day = difftime(start_date, min(start_date), units = "day"),
         week = as.factor(week))|>
  filter(week %in% week_2024$mmwr_week)|>
  select(-cases_total)|>
  group_by(state)|>
  fill(covid_death, total_death, population, .direction = "down")

fit <- dat|> 
  filter(year == "2024") #2024 because it has the lowest COVID 19 Mortality Rate

mod <- lm(mortality ~ week+day, fit)

pred <- predict(mod, newdata = dat, se.fit = TRUE)
```

```{r}
dat <- dat|>
  mutate(expected = pred$fit*population,
         excess = total_death - expected,
         se_expected = pred$se.fit*population,
         sigma_outcome = sd(mod$residuals)*population,
         se_excess = sqrt(sigma_outcome^2 + se_expected^2))
```

```{r}
covid_death_excess <- covid_death_clean|>
  left_join(expected_death_year, by = c("state", "year"))|>
  mutate(excess_mortality = expected_death - total_death)

covid_death_excess|>
  select(year, mmwr_week, state, excess_mortality, covid_death, total_death)
```

#### 6) Excess Mortality by State

Repeat 2 but for excess mortality instead of COVID-19 deaths.

```{r}
# Compute average excess mortality
avg_excess <- covid_death_excess |> 
  group_by(state) |> 
  mutate(avg_excess = mean(excess_mortality, na.rm = TRUE)) |> 
  filter(mmwr_week == max(mmwr_week, na.rm = TRUE)) |> 
  ungroup() |> 
  arrange(desc(excess_mortality))
  

#2020-2022 excess mortality
ggplot(avg_excess, 
       aes(x = avg_excess, y = reorder(state, avg_excess))) +
  geom_bar(stat = "identity", fill = "skyblue") +
  labs(
    title = "Average Excess Mortality by State from 2020-2022",
    x = "Average Excess Mortality",
    y = "State"
  ) +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))
```

```{r}
weekly_excess_2022 <- covid_death|>
  filter(Year == 2022)|>
  group_by(state) |> 
  select(mmwr_week, state, covid_deaths, total_death) |> 
  filter(complete.cases(mmwr_week, state, covid_deaths, total_death)) |> 
  mutate(excess_mortality = total_death-covid_deaths) 
  
#2022 excess mortality by week
ggplot(weekly_excess_2022, 
       aes(x = mmwr_week, y = excess_mortality, color = state)) +
  geom_line() +
  labs(
    title = "Excess Mortality by Week in 2022",
    x = "Week",
    y = "Excess Mortality"
  ) +
  theme(axis.text.x = element_text(angle = 90, hjust = 1))
```
